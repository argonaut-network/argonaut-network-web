version: "3"

services:
  ghost:
    image: ghost:3
    restart: always
    environment:
      - url="https://argonaut.network"
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      
      # Accept HTTP and upgrade to websecure
      #- "traefik.http.routers.ghost-cms-argonaut-network.entrypoints=http"
      #- "traefik.http.routers.ghost-cms-argonaut-network.rule=HostHeader(`argonaut.network`)"
      #- "traefik.http.routers.ghost-cms-argonaut-network.rule=Host(`argonaut.network`)"
      #- "traefik.http.middlewares.ghost-cms-argonaut-network-websecure-redirect.redirectscheme.scheme=websecure"
      #- "traefik.http.routers.ghost-cms-argonaut-network.middlewares=ghost-cms-argonaut-network-websecure-redirect"
      
      # Define secure entry point
      - "traefik.http.routers.ghost-cms-argonaut-network.entrypoints=websecure"
      #- "traefik.http.routers.ghost-cms-argonaut-network-secure.rule=HostHeader(`argonaut.network`)"
      - "traefik.http.routers.ghost-cms-argonaut-network.rule=Host(`argonaut.network`)"
      - "traefik.http.routers.ghost-cms-argonaut-network.tls=true"
      - "traefik.http.routers.ghost-cms-argonaut-network.tls.certresolver=cloudflare"
      #- "traefik.http.services.ghost-cms-argonaut-network.loadbalancer.server.port=8080"
      
      # Attach this container to the reverse reverse-proxy network.
      - "traefik.docker.network=reverse-proxy"
      
      - "com.centurylinklabs.watchtower.enable=true"
    
    volumes:
      - /var/lib/ghost/content:/var/lib/ghost/content

networks:
  reverse-proxy:
    external: true
